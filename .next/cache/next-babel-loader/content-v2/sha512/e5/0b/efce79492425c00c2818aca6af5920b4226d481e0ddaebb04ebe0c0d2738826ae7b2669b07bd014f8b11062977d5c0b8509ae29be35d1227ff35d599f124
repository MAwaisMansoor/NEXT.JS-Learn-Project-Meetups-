{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gosaas/nextjs-learn/pages/index.js\";\n//domain/\n//if import is part of getStaticProps or getSerSideProps it will not be a part of bundle         \nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'Meetup 1',\n  image: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg',\n  address: 'Mujhy Nahi Pata Address!',\n  description: 'This is a dummy description'\n}, {\n  id: 'm2',\n  title: 'Meetup 2',\n  image: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg',\n  address: 'Mujhy Nahi Pata Address!',\n  description: 'This is a dummy description'\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n} //only be created in pages\n//can be async\n//this will run on server after deployment\n//cant set revalidate because it will run on every request\n// export async function getServerSideProps(context){\n//     //const {req, res} = context;\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\n//reserved name, if nextjs finds it renders during pre-rendering process\n//this code never executes on client side\n//it executes during built process\n\n\nexport async function getStaticProps() {\n  //always need to return an object\n  //revalidate get seconds of what it will wait for before rendering\n  const client = await MongoClient.connect(\"mongodb+srv://awais:donlyawais@cluster0.bkx35.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        id: meetup._id\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/home/gosaas/nextjs-learn/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupCollection","collection","find","toArray","close","map","meetup","_id","revalidate"],"mappings":";;AAAA;AAEA;AACA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CAClB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,UAFX;AAGIC,EAAAA,KAAK,EAAE,wEAHX;AAIIC,EAAAA,OAAO,EAAE,0BAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADkB,EAQlB;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,UAFX;AAGIC,EAAAA,KAAK,EAAE,wEAHX;AAIIC,EAAAA,OAAO,EAAE,0BAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARkB,CAAtB;;AAiBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,C,CAED;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA;AAEA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,+FAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMN,OAAO,GAAG,MAAMK,gBAAgB,CAACE,IAAjB,GAAwBC,OAAxB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACHV,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC5BjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADc;AAE5BC,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAFc;AAG5BC,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAHY;AAI5BH,QAAAA,EAAE,EAAEkB,MAAM,CAACC;AAJiB,OAAL,CAAlB;AADN,KADJ;AASHC,IAAAA,UAAU,EAAE;AATT,GAAP;AAWH;AAED,eAAef,QAAf","sourcesContent":["//domain/\n\n//if import is part of getStaticProps or getSerSideProps it will not be a part of bundle         \nimport { MongoClient } from 'mongodb';\n\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst DUMMY_MEETUPS = [\n    {\n        id: 'm1',\n        title: 'Meetup 1',\n        image: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg',\n        address: 'Mujhy Nahi Pata Address!',\n        description: 'This is a dummy description',\n    },\n    {\n        id: 'm2',\n        title: 'Meetup 2',\n        image: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg',\n        address: 'Mujhy Nahi Pata Address!',\n        description: 'This is a dummy description',\n    },\n];\n\nfunction HomePage(props) {\n    return <MeetupList meetups={props.meetups} />\n}\n\n//only be created in pages\n//can be async\n\n//this will run on server after deployment\n//cant set revalidate because it will run on every request\n// export async function getServerSideProps(context){\n//     //const {req, res} = context;\n\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\n\n//reserved name, if nextjs finds it renders during pre-rendering process\n//this code never executes on client side\n//it executes during built process\nexport async function getStaticProps() {\n    //always need to return an object\n    //revalidate get seconds of what it will wait for before rendering\n\n    const client = await MongoClient.connect(\"mongodb+srv://awais:donlyawais@cluster0.bkx35.mongodb.net/meetups?retryWrites=true&w=majority\");\n\n    const db = client.db();\n\n    const meetupCollection = db.collection('meetups');\n\n    const meetups = await meetupCollection.find().toArray();\n\n    client.close();\n\n    return {\n        props: {\n            meetups: meetups.map(meetup => ({\n                title: meetup.title,\n                image: meetup.image,\n                address: meetup.address,\n                id: meetup._id,\n            }))\n        },\n        revalidate: 1\n    }\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}