{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gosaas/nextjs-learn/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: \"Meetup Title\",\n    image: \"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg\",\n    address: \"Mujhy Nahi Pata Address!\",\n    description: \"This is a dummy description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}; //needed for getStaticProps\n\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://awais:donlyawais@cluster0.bkx35.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://awais:donlyawais@cluster0.bkx35.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/gosaas/nextjs-learn/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","props","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","paths","map","meetup","params","meetupId","toString","fallback","getStaticProps","context","selectedMeetup","findOne","meetupData"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE7B,sBAAO,QAAC,YAAD;AACH,IAAA,KAAK,EAAC,cADH;AAEH,IAAA,KAAK,EAAC,wEAFH;AAGH,IAAA,OAAO,EAAC,0BAHL;AAIH,IAAA,WAAW,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,CARD,C,CAUA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,+FAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AADN;AADkB,KAAL,CAAlB,CADJ;AAMHC,IAAAA,QAAQ,EAAE;AANP,GAAP;AAQH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AACzC,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AAEA,QAAMd,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,+FAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AAEA,QAAMe,cAAc,GAAG,MAAMhB,gBAAgB,CAACiB,OAAjB,CAAyB;AAAEb,IAAAA,GAAG,EAAEO;AAAP,GAAzB,CAA7B;AAEAd,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHX,IAAAA,KAAK,EAAE;AACHuB,MAAAA,UAAU,EAACF;AADR;AADJ,GAAP;AAKH;AAED,eAAetB,aAAf","sourcesContent":["\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\nconst MeetupDetails = (props) => {\n\n    return <MeetupDetail    \n        title=\"Meetup Title\"\n        image=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg\"\n        address=\"Mujhy Nahi Pata Address!\"\n        description=\"This is a dummy description\"\n    />\n}\n\n//needed for getStaticProps\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect(\"mongodb+srv://awais:donlyawais@cluster0.bkx35.mongodb.net/meetups?retryWrites=true&w=majority\");\n\n    const db = client.db();\n\n    const meetupCollection = db.collection('meetups');\n\n    const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\n\n    client.close();\n\n    return {\n        paths: meetups.map(meetup => ({\n            params: {\n                meetupId: meetup._id.toString()\n            }\n        })),\n        fallback: false\n    }\n}\n\nexport async function getStaticProps(context){\n    const meetupId = context.params.meetupId;\n\n    const client = await MongoClient.connect(\"mongodb+srv://awais:donlyawais@cluster0.bkx35.mongodb.net/meetups?retryWrites=true&w=majority\");\n\n    const db = client.db();\n\n    const meetupCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupCollection.findOne({ _id: meetupId });\n\n    client.close();\n\n    return {\n        props: {\n            meetupData:selectedMeetup\n        }\n    }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}