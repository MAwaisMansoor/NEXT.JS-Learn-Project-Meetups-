{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gosaas/nextjs-learn/pages/index.js\";\n//domain/\nimport Head from 'next/head'; //if import is part of getStaticProps or getSerSideProps it will not be a part of bundle         \n\nimport MeetupList from '../components/meetups/MeetupList';\nimport { Fragment } from 'react';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n} //only be created in pages\n//can be async\n//this will run on server after deployment\n//cant set revalidate because it will run on every request\n// export async function getServerSideProps(context){\n//     //const {req, res} = context;\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\n//reserved name, if nextjs finds it renders during pre-rendering process\n//this code never executes on client side\n//it executes during built process\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/gosaas/nextjs-learn/pages/index.js"],"names":["Head","MeetupList","Fragment","HomePage","props","meetups"],"mappings":";;AAAA;AAEA,OAAOA,IAAP,MAAiB,WAAjB,C,CAEA;;AAGA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,sBAAO,QAAC,QAAD;AAAA,4BACH,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,eAIH,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,C,CAED;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;KA1BSF,Q;;AAsDT,eAAeA,QAAf","sourcesContent":["//domain/\n\nimport Head from 'next/head';\n\n//if import is part of getStaticProps or getSerSideProps it will not be a part of bundle         \nimport { MongoClient } from 'mongodb';\n\nimport MeetupList from '../components/meetups/MeetupList'; \nimport { Fragment } from 'react';\n\nfunction HomePage(props) {\n    return <Fragment>\n        <Head>\n            <title>Home</title>\n        </Head>\n        <MeetupList meetups={props.meetups} />\n    </Fragment>\n}\n\n//only be created in pages\n//can be async\n\n//this will run on server after deployment\n//cant set revalidate because it will run on every request\n// export async function getServerSideProps(context){\n//     //const {req, res} = context;\n\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\n\n//reserved name, if nextjs finds it renders during pre-rendering process\n//this code never executes on client side\n//it executes during built process\nexport async function getStaticProps() {\n    //always need to return an object\n    //revalidate get seconds of what it will wait for before rendering\n\n    const client = await MongoClient.connect(\"mongodb+srv://awais:donlyawais@cluster0.bkx35.mongodb.net/meetups?retryWrites=true&w=majority\");\n\n    const db = client.db();\n\n    const meetupCollection = db.collection('meetups');\n\n    const meetups = await meetupCollection.find().toArray();\n\n    client.close();\n\n    return {\n        props: {\n            meetups: meetups.map(meetup => ({\n                title: meetup.title,\n                image: meetup.image,\n                address: meetup.address,\n                id: meetup._id.toString(),\n            }))\n        },\n        revalidate: 1\n    }\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}